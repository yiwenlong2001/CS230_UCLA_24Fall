name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Replace with the branch you want to trigger the workflow on
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Use a Linux runner
    timeout-minutes: 5

    steps:
      # Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Python, JRE, and required dependencies
      - name: Install Python, JRE, and Dependencies
        run: |
          # Update apt package lists
          sudo apt-get update
          
          # Install Python and JRE (default Java Runtime Environment)
          sudo apt-get install -y python3 python3-pip default-jre

          # Install Python dependencies from requirements.txt
          pip3 install -r requirements.txt

      # Create the required folders
      - name: Create Directories
        run: |
          mkdir -p evaluation/g4_folder
          mkdir -p evaluation/inter_folder
          mkdir -p evaluation/test_string_folder
          echo "Directories created successfully"

      # Run the Python script (converter.py)
      - name: Run Python Script
        run: |
          # Run the Python script and log output to log_all.txt
          python3 converter.py

      # Run the shell script (evaluation.sh) located in the evaluation folder
      - name: Run Evaluation Script
        run: |
          # Make the shell script executable and run it, logging output to log_all.txt
          chmod +x evaluation.sh
          ./evaluation.sh
        working-directory: evaluation

      # Output the log_all.txt to GitHub Artifact
      - name: Upload log file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: log-all-artifact
          path: evaluation/evluation_log.txt
        
      - name: Upload scoreboard 
        uses: actions/upload-artifact@v3
        with:
          name: scoreboard result
          path: evaluation/scoreboard.txt
        run: |
          cat evaluation/scoreboard.txt